<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Iceberg</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/docs/api/java/</link><description>Recent content on Apache Iceberg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://samredai.github.io/iceberg-docs-prototype/0.12.0/docs/api/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Quickstart</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/java-api-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/java-api-quickstart/</guid><description>Java API Quickstart # Create a table # Tables are created using either a Catalog or an implementation of the Tables interface.
Using a Hive catalog # The Hive catalog connects to a Hive metastore to keep track of Iceberg tables. You can initialize a Hive catalog with a name and some properties. (see: Catalog properties)
Note: Currently, setConf is always required for hive catalogs, but this will change in the future.</description></item><item><title>API</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/api/</guid><description>Iceberg Java API # Tables # The main purpose of the Iceberg API is to manage table metadata, like schema, partition spec, metadata, and data files that store table data.
Table metadata and operations are accessed through the Table interface. This interface will return table information.
Table metadata # The Table interface provides access to the table metadata:
schema returns the current table schema spec returns the current table partition spec properties returns a map of key-value properties currentSnapshot returns the current table snapshot snapshots returns all valid snapshots for the table snapshot(id) returns a specific snapshot by ID location returns the table&amp;rsquo;s base location Tables also provide refresh to update the table to the latest version, and expose helpers:</description></item><item><title>Custom Catalog</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/custom-catalog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/custom-catalog/</guid><description>Custom Catalog Implementation # It&amp;rsquo;s possible to read an iceberg table either from an hdfs path or from a hive table. It&amp;rsquo;s also possible to use a custom metastore in place of hive. The steps to do that are as follows.
Custom TableOperations Custom Catalog Custom FileIO Custom LocationProvider Custom IcebergSource Custom table operations implementation # Extend BaseMetastoreTableOperations to provide implementation on how to read and write metadata</description></item><item><title>JavaDoc</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/docs/api/java/javadoc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/docs/api/java/javadoc/</guid><description/></item></channel></rss>