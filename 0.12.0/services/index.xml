<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Services on Apache Iceberg</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/</link><description>Recent content in Services on Apache Iceberg</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/index.xml" rel="self" type="application/rss+xml"/><item><title>Schema Evolution</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/schema-evolution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/schema-evolution/</guid><description>Iceberg avoids unpleasant surprises. Schema evolution works and won’t inadvertently un-delete data. Users don’t need to know about partitioning to get fast queries.</description></item><item><title>Hidden Partitioning</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/hidden-partitioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/hidden-partitioning/</guid><description>Iceberg handles the tedious and error-prone task of producing partition values for rows in a table and avoids reading unnecessary partitions automatically. Consumers don’t need to know how the table is partitioned and add extra filters to their queries and the partition layouts can evolve as needed.</description></item><item><title>Time Travel</title><link>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/time-travel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samredai.github.io/iceberg-docs-prototype/0.12.0/services/time-travel/</guid><description>Time-travel enables reproducible queries that use exactly the same table snapshot, or lets users easily examine changes. Version rollback allows users to quickly correct problems by resetting tables to a good state</description></item></channel></rss>